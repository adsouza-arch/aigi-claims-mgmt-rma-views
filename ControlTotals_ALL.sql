USE [rmA_Main]
GO

/****** Object:  View [ARCH].[vw_DataStore_ControlTotals_ALL]    Script Date: 11/8/2023 9:07:50 PM ******/
DROP VIEW [ARCH].[vw_DataStore_ControlTotals_ALL]
GO

/****** Object:  View [ARCH].[vw_DataStore_ControlTotals_ALL]    Script Date: 11/8/2023 9:07:50 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE VIEW [ARCH].[vw_DataStore_ControlTotals_ALL]
AS

WITH 

GROUP1 AS (SELECT
CLAIM_SUPP.CLM_BUSUNIT_TEXT as CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT as CLM_BSUBDIV_TEXT,
CASE WHEN POLICY_LOB_DESC.SHORT_CODE is NULL then 'NULL' ELSE POLICY_LOB_DESC.SHORT_CODE END POLICY_LOB_CD,
CASE WHEN POLICY_LOB_DESC.CODE_DESC is NULL then 'NULL' ELSE POLICY_LOB_DESC.CODE_DESC END POLICY_LOB_DESC,
CLAIM_STATUS_CODE.SHORT_CODE as CLAIM_STATUS_CODE,CLAIM_TYPE_CODE.SHORT_CODE as CLAIM_TYPE_CODE,
ENTITY.LAST_NAME as ENTITY_LAST_NAME,
Round(sum(RC.RESERVE_AMOUNT),2) AS CLAIM_TOTAL_RES_AMT,
CASE 
WHEN Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2) >0 AND Round(sum(RSV.NEW_RESERVE_AMOUNT),2) >0 THEN
(Round(sum(RC.BALANCE_AMOUNT),2)-(Round(sum(RSV.NEW_RESERVE_AMOUNT),2)-Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2)))
ELSE Round(sum(RC.BALANCE_AMOUNT),2)END AS CLAIM_TOTAL_BAL,
CASE 
WHEN Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2) >0 AND Round(sum(RSV.NEW_RESERVE_AMOUNT),2) >0 THEN
(Round(sum(RC.INCURRED_AMOUNT),2)-(Round(sum(RSV.NEW_RESERVE_AMOUNT),2)-Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2)))
ELSE Round(sum(RC.INCURRED_AMOUNT),2)END AS CLAIM_TOTAL_INC,
--Round(sum(RC.BALANCE_AMOUNT),2) AS CLAIM_TOTAL_BAL,
--Round(SUM(RC.INCURRED_AMOUNT),2) AS CLAIM_TOTAL_INC,
Round(SUM(RC.PAID_TOTAL),2) AS CLAIM_TOTAL_PAID,
Round(SUM(RC.COLLECTION_TOTAL),2) AS CLAIM_TOTAL_COLL,
Round(sum(CLAIM_SUPP.CLM_GRO_INC_AMT),2) AS CLAIM_TOTAL_INC_GROSS,
LEFT(P.EFFECTIVE_DATE,4) As POLICY_YEAR,
CT.CODE_DESC AS DIRECT_ASSUMED,LEFT(EVENT.DATE_OF_EVENT,4) As ACCIDENT_YEAR,MAST_COMP.CODE_DESC AS ISSUE_COMP_NM
FROM CLAIM JOIN EVENT ON (CLAIM.EVENT_ID=EVENT.EVENT_ID) 
JOIN ENTITY ON (EVENT.DEPT_EID=ENTITY.ENTITY_ID)
JOIN CLAIM_SUPP ON (CLAIM_SUPP.CLAIM_ID=CLAIM.CLAIM_ID)
JOIN CODES CLAIM_STATUS_CODE ON (CLAIM_STATUS_CODE.CODE_ID=CLAIM.CLAIM_STATUS_CODE)
JOIN CODES CLAIM_TYPE_CODE ON (CLAIM_TYPE_CODE.CODE_ID=CLAIM.CLAIM_TYPE_CODE)
JOIN CODES_TEXT POLICY_LOB_DESC ON (CLAIM.POLICY_LOB_CODE=POLICY_LOB_DESC.CODE_ID)
JOIN RESERVE_CURRENT RC ON RC.CLAIM_ID = CLAIM.CLAIM_ID --AND "RC"."POLCVG_LOSS_ROW_ID"<>0
JOIN CODES_TEXT RES_TYPE ON RES_TYPE.CODE_ID=RC.RESERVE_TYPE_CODE
JOIN POLICY P ON P.POLICY_ID=CLAIM.PRIMARY_POLICY_ID
LEFT OUTER JOIN CODES ON CODES.SHORT_CODE=P.MASTER_COMPANY AND CODES.TABLE_ID=2818
LEFT OUTER JOIN CODES_TEXT MAST_COMP ON CODES.CODE_ID=MAST_COMP.CODE_ID 
LEFT OUTER JOIN POLICY_SUPP PS ON PS.POLICY_ID=P.POLICY_ID
LEFT OUTER JOIN CODES_TEXT CT ON CT.CODE_ID=PS.POL_DIRASSU_CODE
--LEFT OUTER JOIN CODES_TEXT CT_ISSCOMP ON CT_ISSCOMP.CODE_ID=PS.POL_PCO_CODE
LEFT JOIN 
(SELECT RC_ROW_ID, MAX(RSV_HIST_ROW_ID) RSV_HIST_ROW_ID FROM RSV_SUP_APPROVAL_HIST WHERE 1=1  GROUP BY RC_ROW_ID)
RSV_SUP_APPROVAL_HIST_CTRL ON RSV_SUP_APPROVAL_HIST_CTRL.RC_ROW_ID=RC.RC_ROW_ID AND RC.RES_STATUS_CODE=5602
LEFT JOIN RSV_SUP_APPROVAL_HIST rsv on rsv.RSV_HIST_ROW_ID=RSV_SUP_APPROVAL_HIST_CTRL.RSV_HIST_ROW_ID AND
RSV.RES_STATUS_CODE=7974
WHERE RES_TYPE.SHORT_CODE in ('IND','EXP1', 'EXP2', 'MED') AND
CLAIM_SUPP.CLM_BUSUNIT_TEXT IN ('Retail Energy','E&S Property','Healthcare','Contract Binding Operations','Surety',
'Executive Assurance','P&C Programs','Construction','Alternative Markets','Const, NAC, Alt Markets, High',
'Treaty Reinsurance','Programs','E&S Casualty','Professional Liability - Darien Managed','Professional Liability',
'High Excess Comp','Property','Const, NAC, Alt Markets, High Excess Comp (CNAX)','Canadian Managed','Special Risks',
'Facultative Reinsurance - not part of ACGL Insurance Operati','Lenders','Travel & Accident',
'Professional Liability - Open Brokerage','National Accounts Casualty') 
--AND P.EFFECTIVE_DATE >= '20220101' AND P.EFFECTIVE_DATE <= '20221231'
GROUP BY
CLAIM_SUPP.CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT,POLICY_LOB_DESC.SHORT_CODE,POLICY_LOB_DESC.CODE_DESC,
CLAIM_STATUS_CODE.SHORT_CODE,CLAIM_TYPE_CODE.SHORT_CODE,ENTITY.LAST_NAME,LEFT(P.EFFECTIVE_DATE,4),CT.CODE_DESC,
LEFT(EVENT.DATE_OF_EVENT,4),MAST_COMP.CODE_DESC
),	
GROUP2 AS (SELECT
CLAIM_SUPP.CLM_BUSUNIT_TEXT as CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT as CLM_BSUBDIV_TEXT,
CASE WHEN POLICY_LOB_DESC.SHORT_CODE is NULL then 'NULL' ELSE POLICY_LOB_DESC.SHORT_CODE END POLICY_LOB_CD,
CASE WHEN POLICY_LOB_DESC.CODE_DESC is NULL then 'NULL' ELSE POLICY_LOB_DESC.CODE_DESC END POLICY_LOB_DESC,
CLAIM_STATUS_CODE.SHORT_CODE as CLAIM_STATUS_CODE,CLAIM_TYPE_CODE.SHORT_CODE as CLAIM_TYPE_CODE,
ENTITY.LAST_NAME as ENTITY_LAST_NAME,
COUNT(distinct(CLAIM.CLAIM_NUMBER)) As ClaimCount,
COUNT(distinct(CLMNT.CLAIMANT_ROW_ID)) As ClaimantCount,
COUNT(distinct(FNDS.TRANS_ID)) As TransactionCount,
COUNT(distinct(FTS.SPLIT_ROW_ID)) As TransactionSplitCount
,LEFT(P.EFFECTIVE_DATE,4) As POLICY_YEAR,CT.CODE_DESC AS DIRECT_ASSUMED,LEFT(EVENT.DATE_OF_EVENT,4) As ACCIDENT_YEAR
,MAST_COMP.CODE_DESC AS ISSUE_COMP_NM
FROM CLAIM JOIN EVENT ON (CLAIM.EVENT_ID=EVENT.EVENT_ID) JOIN CODES_TEXT CLAIM_TYPE_DESC ON
(CLAIM.CLAIM_TYPE_CODE=CLAIM_TYPE_DESC.CODE_ID)
JOIN ENTITY ON (EVENT.DEPT_EID=ENTITY.ENTITY_ID)
LEFT OUTER JOIN POLICY P ON P.POLICY_ID=CLAIM.PRIMARY_POLICY_ID
LEFT OUTER JOIN POLICY_SUPP PS ON PS.POLICY_ID=P.POLICY_ID
LEFT OUTER JOIN CODES_TEXT CT ON CT.CODE_ID=PS.POL_DIRASSU_CODE
LEFT OUTER JOIN CODES ON CODES.SHORT_CODE=P.MASTER_COMPANY AND CODES.TABLE_ID=2818
LEFT OUTER JOIN CODES_TEXT MAST_COMP ON CODES.CODE_ID=MAST_COMP.CODE_ID 
LEFT OUTER JOIN CLAIM_SUPP ON (CLAIM_SUPP.CLAIM_ID=CLAIM.CLAIM_ID)
LEFT OUTER JOIN CODES CLAIM_STATUS_CODE ON (CLAIM_STATUS_CODE.CODE_ID=CLAIM.CLAIM_STATUS_CODE)
LEFT OUTER JOIN CODES CLAIM_TYPE_CODE ON (CLAIM_TYPE_CODE.CODE_ID=CLAIM.CLAIM_TYPE_CODE)
LEFT OUTER JOIN CODES_TEXT POLICY_LOB_DESC ON (CLAIM.POLICY_LOB_CODE=POLICY_LOB_DESC.CODE_ID)
LEFT OUTER JOIN CLAIMANT CLMNT ON CLAIM.CLAIM_ID = CLMNT.CLAIM_ID
LEFT OUTER JOIN RESERVE_CURRENT RC ON RC.CLAIM_ID = CLAIM.CLAIM_ID --AND "RC"."POLCVG_LOSS_ROW_ID"<>0
LEFT OUTER JOIN FUNDS FNDS ON CLAIM.CLAIM_ID = FNDS.CLAIM_ID
LEFT OUTER JOIN FUNDS_TRANS_SPLIT fts ON fts.TRANS_ID = FNDS.TRANS_ID
WHERE 
CLAIM_SUPP.CLM_BUSUNIT_TEXT IN ('Retail Energy','E&S Property','Healthcare','Contract Binding Operations','Surety',
'Executive Assurance','P&C Programs','Construction','Alternative Markets','Const, NAC, Alt Markets, High',
'Treaty Reinsurance','Programs','E&S Casualty','Professional Liability - Darien Managed','Professional Liability',
'High Excess Comp','Property','Const, NAC, Alt Markets, High Excess Comp (CNAX)','Canadian Managed','Special Risks',
'Facultative Reinsurance - not part of ACGL Insurance Operati','Lenders','Travel & Accident',
'Professional Liability - Open Brokerage','National Accounts Casualty') 
--AND P.EFFECTIVE_DATE >= '20220101' AND P.EFFECTIVE_DATE <= '20221231'
GROUP BY
CLAIM_SUPP.CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT,POLICY_LOB_DESC.SHORT_CODE,POLICY_LOB_DESC.CODE_DESC,
CLAIM_STATUS_CODE.SHORT_CODE,CLAIM_TYPE_CODE.SHORT_CODE,ENTITY.LAST_NAME,LEFT(P.EFFECTIVE_DATE,4),CT.CODE_DESC
,LEFT(EVENT.DATE_OF_EVENT,4),MAST_COMP.CODE_DESC
),
GROUP3 AS(SELECT Distinct
CLAIM_SUPP.CLM_BUSUNIT_TEXT as CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT as CLM_BSUBDIV_TEXT,
CASE WHEN POLICY_LOB_DESC.SHORT_CODE is NULL then 'NULL' ELSE POLICY_LOB_DESC.SHORT_CODE END POLICY_LOB_CD,
CASE WHEN POLICY_LOB_DESC.CODE_DESC is NULL then 'NULL' ELSE POLICY_LOB_DESC.CODE_DESC END POLICY_LOB_DESC,
CLAIM_STATUS_CODE.SHORT_CODE as CLAIM_STATUS_CODE,CLAIM_TYPE_CODE.SHORT_CODE as CLAIM_TYPE_CODE,
ENTITY.LAST_NAME as ENTITY_LAST_NAME,
CASE 
WHEN Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2) >0 AND Round(sum(RSV.NEW_RESERVE_AMOUNT),2) >0 THEN
(Round(sum(RC.BALANCE_AMOUNT),2)-(Round(sum(RSV.NEW_RESERVE_AMOUNT),2)-Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2)))
ELSE Round(sum(RC.BALANCE_AMOUNT),2)END AS IND_BAL,
CASE 
WHEN Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2) >0 AND Round(sum(RSV.NEW_RESERVE_AMOUNT),2) >0 THEN
(Round(sum(RC.INCURRED_AMOUNT),2)-(Round(sum(RSV.NEW_RESERVE_AMOUNT),2)-Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2)))
ELSE Round(sum(RC.INCURRED_AMOUNT),2)END AS IND_INC,
--ROUND(SUM(RC.BALANCE_AMOUNT),2) AS IND_BAL,ROUND(SUM(RC.INCURRED_AMOUNT),2) AS IND_INC,
ROUND(SUM(RC.PAID_TOTAL),2) AS IND_PAID,ROUND(SUM(RC.COLLECTION_TOTAL),2) AS IND_COLL,
ROUND(SUM(RC.RESERVE_AMOUNT),2) AS IND_RES_AMT
,LEFT(P.EFFECTIVE_DATE,4) As POLICY_YEAR,CT.CODE_DESC AS DIRECT_ASSUMED,
LEFT(EVENT.DATE_OF_EVENT,4) As ACCIDENT_YEAR,MAST_COMP.CODE_DESC AS ISSUE_COMP_NM
FROM CLAIM JOIN EVENT ON (CLAIM.EVENT_ID=EVENT.EVENT_ID) JOIN ENTITY ON (EVENT.DEPT_EID=ENTITY.ENTITY_ID)
JOIN CLAIM_SUPP ON (CLAIM_SUPP.CLAIM_ID=CLAIM.CLAIM_ID) 
JOIN CODES CLAIM_STATUS_CODE ON (CLAIM_STATUS_CODE.CODE_ID=CLAIM.CLAIM_STATUS_CODE)
JOIN CODES CLAIM_TYPE_CODE ON (CLAIM_TYPE_CODE.CODE_ID=CLAIM.CLAIM_TYPE_CODE)
JOIN CODES_TEXT POLICY_LOB_DESC ON (CLAIM.POLICY_LOB_CODE=POLICY_LOB_DESC.CODE_ID)
JOIN RESERVE_CURRENT RC ON RC.CLAIM_ID = CLAIM.CLAIM_ID --AND "RC"."POLCVG_LOSS_ROW_ID"<>0
JOIN CODES_TEXT RES_TYPE ON RES_TYPE.CODE_ID=RC.RESERVE_TYPE_CODE
LEFT JOIN 
(SELECT RC_ROW_ID, MAX(RSV_HIST_ROW_ID) RSV_HIST_ROW_ID FROM RSV_SUP_APPROVAL_HIST WHERE 1=1  GROUP BY RC_ROW_ID)
RSV_SUP_APPROVAL_HIST_CTRL ON RSV_SUP_APPROVAL_HIST_CTRL.RC_ROW_ID=RC.RC_ROW_ID AND RC.RES_STATUS_CODE=5602
LEFT JOIN RSV_SUP_APPROVAL_HIST rsv on rsv.RSV_HIST_ROW_ID=RSV_SUP_APPROVAL_HIST_CTRL.RSV_HIST_ROW_ID AND
RSV.RES_STATUS_CODE=7974
JOIN POLICY P ON P.POLICY_ID=CLAIM.PRIMARY_POLICY_ID
LEFT OUTER JOIN POLICY_SUPP PS ON PS.POLICY_ID=P.POLICY_ID
LEFT OUTER JOIN CODES_TEXT CT ON CT.CODE_ID=PS.POL_DIRASSU_CODE
LEFT OUTER JOIN CODES ON CODES.SHORT_CODE=P.MASTER_COMPANY AND CODES.TABLE_ID=2818
LEFT OUTER JOIN CODES_TEXT MAST_COMP ON CODES.CODE_ID=MAST_COMP.CODE_ID 
WHERE RES_TYPE.SHORT_CODE='IND' AND
CLAIM_SUPP.CLM_BUSUNIT_TEXT IN ('Retail Energy','E&S Property','Healthcare','Contract Binding Operations',
'Surety','Executive Assurance','P&C Programs','Construction','Alternative Markets','Lenders',
'Const, NAC, Alt Markets, High','Treaty Reinsurance','Programs','E&S Casualty','Travel & Accident',
'Professional Liability - Darien Managed','Professional Liability','High Excess Comp','Property',
'Const, NAC, Alt Markets, High Excess Comp (CNAX)','Canadian Managed','Special Risks',
'Facultative Reinsurance - not part of ACGL Insurance Operati','Professional Liability - Open Brokerage',
'National Accounts Casualty')
--AND P.EFFECTIVE_DATE >= '20200101' AND P.EXPIRATION_DATE <= '20201231'
GROUP BY
CLAIM_SUPP.CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT,POLICY_LOB_DESC.SHORT_CODE,POLICY_LOB_DESC.CODE_DESC,
CLAIM_STATUS_CODE.SHORT_CODE,CLAIM_TYPE_CODE.SHORT_CODE,ENTITY.LAST_NAME,LEFT(P.EFFECTIVE_DATE,4),CT.CODE_DESC, 
LEFT(EVENT.DATE_OF_EVENT,4),MAST_COMP.CODE_DESC
),
GROUP4 AS(SELECT Distinct
CLAIM_SUPP.CLM_BUSUNIT_TEXT as CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT as CLM_BSUBDIV_TEXT,
CASE WHEN POLICY_LOB_DESC.SHORT_CODE is NULL then 'NULL' ELSE POLICY_LOB_DESC.SHORT_CODE END POLICY_LOB_CD,
CASE WHEN POLICY_LOB_DESC.CODE_DESC is NULL then 'NULL' ELSE POLICY_LOB_DESC.CODE_DESC END POLICY_LOB_DESC,
CLAIM_STATUS_CODE.SHORT_CODE as CLAIM_STATUS_CODE,CLAIM_TYPE_CODE.SHORT_CODE as CLAIM_TYPE_CODE,
ENTITY.LAST_NAME as ENTITY_LAST_NAME,
CASE 
WHEN Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2) >0 AND Round(sum(RSV.NEW_RESERVE_AMOUNT),2) >0 THEN
(Round(sum(RC.BALANCE_AMOUNT),2)-(Round(sum(RSV.NEW_RESERVE_AMOUNT),2)-Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2)))
ELSE Round(sum(RC.BALANCE_AMOUNT),2)END AS EXP1_BAL,
CASE 
WHEN Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2) >0 AND Round(sum(RSV.NEW_RESERVE_AMOUNT),2) >0 THEN
(Round(sum(RC.INCURRED_AMOUNT),2)-(Round(sum(RSV.NEW_RESERVE_AMOUNT),2)-Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2)))
ELSE Round(sum(RC.INCURRED_AMOUNT),2)END AS EXP1_INC,
--ROUND(SUM(RC.BALANCE_AMOUNT),2) AS EXP1_BAL,ROUND(SUM(RC.INCURRED_AMOUNT),2) AS EXP1_INC,
ROUND(SUM(RC.PAID_TOTAL),2) AS EXP1_PAID,ROUND(SUM(RC.COLLECTION_TOTAL),2) AS EXP1_COLL,
ROUND(SUM(RC.RESERVE_AMOUNT),2) AS EXP1_RES_AMT,LEFT(P.EFFECTIVE_DATE,4) As POLICY_YEAR,CT.CODE_DESC AS DIRECT_ASSUMED,
 LEFT(EVENT.DATE_OF_EVENT,4) As ACCIDENT_YEAR,MAST_COMP.CODE_DESC AS ISSUE_COMP_NM
FROM CLAIM JOIN EVENT ON (CLAIM.EVENT_ID=EVENT.EVENT_ID) JOIN ENTITY ON (EVENT.DEPT_EID=ENTITY.ENTITY_ID)
JOIN CLAIM_SUPP ON (CLAIM_SUPP.CLAIM_ID=CLAIM.CLAIM_ID) 
JOIN CODES CLAIM_STATUS_CODE ON (CLAIM_STATUS_CODE.CODE_ID=CLAIM.CLAIM_STATUS_CODE)
JOIN CODES CLAIM_TYPE_CODE ON (CLAIM_TYPE_CODE.CODE_ID=CLAIM.CLAIM_TYPE_CODE)
JOIN CODES_TEXT POLICY_LOB_DESC ON (CLAIM.POLICY_LOB_CODE=POLICY_LOB_DESC.CODE_ID)
JOIN RESERVE_CURRENT RC ON RC.CLAIM_ID = CLAIM.CLAIM_ID --AND "RC"."POLCVG_LOSS_ROW_ID"<>0
JOIN CODES_TEXT RES_TYPE ON RES_TYPE.CODE_ID=RC.RESERVE_TYPE_CODE
LEFT JOIN 
(SELECT RC_ROW_ID, MAX(RSV_HIST_ROW_ID) RSV_HIST_ROW_ID FROM RSV_SUP_APPROVAL_HIST WHERE 1=1  GROUP BY RC_ROW_ID)
RSV_SUP_APPROVAL_HIST_CTRL ON RSV_SUP_APPROVAL_HIST_CTRL.RC_ROW_ID=RC.RC_ROW_ID AND RC.RES_STATUS_CODE=5602
LEFT JOIN RSV_SUP_APPROVAL_HIST rsv on rsv.RSV_HIST_ROW_ID=RSV_SUP_APPROVAL_HIST_CTRL.RSV_HIST_ROW_ID AND
RSV.RES_STATUS_CODE=7974
JOIN POLICY P ON P.POLICY_ID=CLAIM.PRIMARY_POLICY_ID
LEFT OUTER JOIN POLICY_SUPP PS ON PS.POLICY_ID=P.POLICY_ID
LEFT OUTER JOIN CODES_TEXT CT ON CT.CODE_ID=PS.POL_DIRASSU_CODE
LEFT OUTER JOIN CODES ON CODES.SHORT_CODE=P.MASTER_COMPANY AND CODES.TABLE_ID=2818
LEFT OUTER JOIN CODES_TEXT MAST_COMP ON CODES.CODE_ID=MAST_COMP.CODE_ID 
WHERE RES_TYPE.SHORT_CODE='EXP1' AND
CLAIM_SUPP.CLM_BUSUNIT_TEXT IN ('Retail Energy','E&S Property','Healthcare','Contract Binding Operations',
'Surety','Executive Assurance','P&C Programs','Construction','Alternative Markets','Lenders',
'Const, NAC, Alt Markets, High','Treaty Reinsurance','Programs','E&S Casualty','Travel & Accident',
'Professional Liability - Darien Managed','Professional Liability','High Excess Comp','Property',
'Const, NAC, Alt Markets, High Excess Comp (CNAX)','Canadian Managed','Special Risks',
'Facultative Reinsurance - not part of ACGL Insurance Operati','Professional Liability - Open Brokerage',
'National Accounts Casualty')
--AND P.EFFECTIVE_DATE >= '20200101' AND P.EXPIRATION_DATE <= '20201231'
GROUP BY
CLAIM_SUPP.CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT,POLICY_LOB_DESC.SHORT_CODE,POLICY_LOB_DESC.CODE_DESC,
CLAIM_STATUS_CODE.SHORT_CODE,CLAIM_TYPE_CODE.SHORT_CODE,ENTITY.LAST_NAME,LEFT(P.EFFECTIVE_DATE,4),CT.CODE_DESC,LEFT(EVENT.DATE_OF_EVENT,4)
,MAST_COMP.CODE_DESC
),
GROUP5 AS(SELECT Distinct
CLAIM_SUPP.CLM_BUSUNIT_TEXT as CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT as CLM_BSUBDIV_TEXT,
CASE WHEN POLICY_LOB_DESC.SHORT_CODE is NULL then 'NULL' ELSE POLICY_LOB_DESC.SHORT_CODE END POLICY_LOB_CD,
CASE WHEN POLICY_LOB_DESC.CODE_DESC is NULL then 'NULL' ELSE POLICY_LOB_DESC.CODE_DESC END POLICY_LOB_DESC,
CLAIM_STATUS_CODE.SHORT_CODE as CLAIM_STATUS_CODE,CLAIM_TYPE_CODE.SHORT_CODE as CLAIM_TYPE_CODE,
ENTITY.LAST_NAME as ENTITY_LAST_NAME,
CASE 
WHEN Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2) >0 AND Round(sum(RSV.NEW_RESERVE_AMOUNT),2) >0 THEN
(Round(sum(RC.BALANCE_AMOUNT),2)-(Round(sum(RSV.NEW_RESERVE_AMOUNT),2)-Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2)))
ELSE Round(sum(RC.BALANCE_AMOUNT),2)END AS EXP2_BAL,
CASE 
WHEN Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2) >0 AND Round(sum(RSV.NEW_RESERVE_AMOUNT),2) >0 THEN
(Round(sum(RC.INCURRED_AMOUNT),2)-(Round(sum(RSV.NEW_RESERVE_AMOUNT),2)-Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2)))
ELSE Round(sum(RC.INCURRED_AMOUNT),2)END AS EXP2_INC,
--ROUND(SUM(RC.BALANCE_AMOUNT),2) AS EXP2_BAL,ROUND(SUM(RC.INCURRED_AMOUNT),2) AS EXP2_INC,
ROUND(SUM(RC.PAID_TOTAL),2) AS EXP2_PAID,ROUND(SUM(RC.COLLECTION_TOTAL),2) AS EXP2_COLL,
ROUND(SUM(RC.RESERVE_AMOUNT),2) AS EXP2_RES_AMT,LEFT(P.EFFECTIVE_DATE,4) As POLICY_YEAR,CT.CODE_DESC AS DIRECT_ASSUMED,
LEFT(EVENT.DATE_OF_EVENT,4) As ACCIDENT_YEAR,MAST_COMP.CODE_DESC AS ISSUE_COMP_NM
FROM CLAIM JOIN EVENT ON (CLAIM.EVENT_ID=EVENT.EVENT_ID) JOIN ENTITY ON (EVENT.DEPT_EID=ENTITY.ENTITY_ID)
JOIN CLAIM_SUPP ON (CLAIM_SUPP.CLAIM_ID=CLAIM.CLAIM_ID) 
JOIN CODES CLAIM_STATUS_CODE ON (CLAIM_STATUS_CODE.CODE_ID=CLAIM.CLAIM_STATUS_CODE)
JOIN CODES CLAIM_TYPE_CODE ON (CLAIM_TYPE_CODE.CODE_ID=CLAIM.CLAIM_TYPE_CODE)
JOIN CODES_TEXT POLICY_LOB_DESC ON (CLAIM.POLICY_LOB_CODE=POLICY_LOB_DESC.CODE_ID)
JOIN RESERVE_CURRENT RC ON RC.CLAIM_ID = CLAIM.CLAIM_ID --AND "RC"."POLCVG_LOSS_ROW_ID"<>0
JOIN CODES_TEXT RES_TYPE ON RES_TYPE.CODE_ID=RC.RESERVE_TYPE_CODE
LEFT JOIN 
(SELECT RC_ROW_ID, MAX(RSV_HIST_ROW_ID) RSV_HIST_ROW_ID FROM RSV_SUP_APPROVAL_HIST WHERE 1=1  GROUP BY RC_ROW_ID)
RSV_SUP_APPROVAL_HIST_CTRL ON RSV_SUP_APPROVAL_HIST_CTRL.RC_ROW_ID=RC.RC_ROW_ID AND RC.RES_STATUS_CODE=5602
LEFT JOIN RSV_SUP_APPROVAL_HIST rsv on rsv.RSV_HIST_ROW_ID=RSV_SUP_APPROVAL_HIST_CTRL.RSV_HIST_ROW_ID AND
RSV.RES_STATUS_CODE=7974
JOIN POLICY P ON P.POLICY_ID=CLAIM.PRIMARY_POLICY_ID
LEFT OUTER JOIN POLICY_SUPP PS ON PS.POLICY_ID=P.POLICY_ID
LEFT OUTER JOIN CODES_TEXT CT ON CT.CODE_ID=PS.POL_DIRASSU_CODE
LEFT OUTER JOIN CODES ON CODES.SHORT_CODE=P.MASTER_COMPANY AND CODES.TABLE_ID=2818
LEFT OUTER JOIN CODES_TEXT MAST_COMP ON CODES.CODE_ID=MAST_COMP.CODE_ID 
WHERE RES_TYPE.SHORT_CODE='EXP2' AND
CLAIM_SUPP.CLM_BUSUNIT_TEXT IN ('Retail Energy','E&S Property','Healthcare','Contract Binding Operations',
'Surety','Executive Assurance','P&C Programs','Construction','Alternative Markets','Lenders',
'Const, NAC, Alt Markets, High','Treaty Reinsurance','Programs','E&S Casualty','Travel & Accident',
'Professional Liability - Darien Managed','Professional Liability','High Excess Comp','Property',
'Const, NAC, Alt Markets, High Excess Comp (CNAX)','Canadian Managed','Special Risks',
'Facultative Reinsurance - not part of ACGL Insurance Operati','Professional Liability - Open Brokerage',
'National Accounts Casualty')
--AND P.EFFECTIVE_DATE >= '20200101' AND P.EXPIRATION_DATE <= '20201231'
GROUP BY
CLAIM_SUPP.CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT,POLICY_LOB_DESC.SHORT_CODE,POLICY_LOB_DESC.CODE_DESC,
CLAIM_STATUS_CODE.SHORT_CODE,CLAIM_TYPE_CODE.SHORT_CODE,ENTITY.LAST_NAME,LEFT(P.EFFECTIVE_DATE,4),CT.CODE_DESC,LEFT(EVENT.DATE_OF_EVENT,4)
,MAST_COMP.CODE_DESC
),
GROUP6 AS(SELECT Distinct
CLAIM_SUPP.CLM_BUSUNIT_TEXT as CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT as CLM_BSUBDIV_TEXT,
CASE WHEN POLICY_LOB_DESC.SHORT_CODE is NULL then 'NULL' ELSE POLICY_LOB_DESC.SHORT_CODE END POLICY_LOB_CD,
CASE WHEN POLICY_LOB_DESC.CODE_DESC is NULL then 'NULL' ELSE POLICY_LOB_DESC.CODE_DESC END POLICY_LOB_DESC,
CLAIM_STATUS_CODE.SHORT_CODE as CLAIM_STATUS_CODE,CLAIM_TYPE_CODE.SHORT_CODE as CLAIM_TYPE_CODE,
ENTITY.LAST_NAME as ENTITY_LAST_NAME,
CASE 
WHEN Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2) >0 AND Round(sum(RSV.NEW_RESERVE_AMOUNT),2) >0 THEN
(Round(sum(RC.BALANCE_AMOUNT),2)-(Round(sum(RSV.NEW_RESERVE_AMOUNT),2)-Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2)))
ELSE Round(sum(RC.BALANCE_AMOUNT),2)
END AS MED_BAL,
CASE 
WHEN Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2) >0 AND Round(sum(RSV.NEW_RESERVE_AMOUNT),2) >0 THEN
(Round(sum(RC.INCURRED_AMOUNT),2)-(Round(sum(RSV.NEW_RESERVE_AMOUNT),2)-Round(sum(RSV.ORIGINAL_RESERVE_AMOUNT),2)))
ELSE Round(sum(RC.INCURRED_AMOUNT),2)END AS MED_INC,
--ROUND(SUM(RC.BALANCE_AMOUNT),2) AS MED_BAL,ROUND(SUM(RC.INCURRED_AMOUNT),2) AS MED_INC,
ROUND(SUM(RC.PAID_TOTAL),2) AS MED_PAID,
ROUND(SUM(RC.COLLECTION_TOTAL),2) AS MED_COLL,
ROUND(SUM(RC.RESERVE_AMOUNT),2) AS MED_RES_AMT,
LEFT(P.EFFECTIVE_DATE,4) As POLICY_YEAR,CT.CODE_DESC AS DIRECT_ASSUMED,
LEFT(EVENT.DATE_OF_EVENT,4) As ACCIDENT_YEAR,MAST_COMP.CODE_DESC AS ISSUE_COMP_NM
FROM CLAIM JOIN EVENT ON (CLAIM.EVENT_ID=EVENT.EVENT_ID) JOIN ENTITY ON (EVENT.DEPT_EID=ENTITY.ENTITY_ID)
JOIN CLAIM_SUPP ON (CLAIM_SUPP.CLAIM_ID=CLAIM.CLAIM_ID) 
JOIN CODES CLAIM_STATUS_CODE ON (CLAIM_STATUS_CODE.CODE_ID=CLAIM.CLAIM_STATUS_CODE)
JOIN CODES CLAIM_TYPE_CODE ON (CLAIM_TYPE_CODE.CODE_ID=CLAIM.CLAIM_TYPE_CODE)
JOIN CODES_TEXT POLICY_LOB_DESC ON (CLAIM.POLICY_LOB_CODE=POLICY_LOB_DESC.CODE_ID)
JOIN RESERVE_CURRENT RC ON RC.CLAIM_ID = CLAIM.CLAIM_ID --AND "RC"."POLCVG_LOSS_ROW_ID"<>0
JOIN CODES_TEXT RES_TYPE ON RES_TYPE.CODE_ID=RC.RESERVE_TYPE_CODE
LEFT JOIN 
(SELECT RC_ROW_ID, MAX(RSV_HIST_ROW_ID) RSV_HIST_ROW_ID FROM RSV_SUP_APPROVAL_HIST WHERE 1=1  GROUP BY RC_ROW_ID)
RSV_SUP_APPROVAL_HIST_CTRL ON RSV_SUP_APPROVAL_HIST_CTRL.RC_ROW_ID=RC.RC_ROW_ID AND RC.RES_STATUS_CODE=5602
LEFT JOIN RSV_SUP_APPROVAL_HIST rsv on rsv.RSV_HIST_ROW_ID=RSV_SUP_APPROVAL_HIST_CTRL.RSV_HIST_ROW_ID AND
RSV.RES_STATUS_CODE=7974
JOIN POLICY P ON P.POLICY_ID=CLAIM.PRIMARY_POLICY_ID
LEFT OUTER JOIN POLICY_SUPP PS ON PS.POLICY_ID=P.POLICY_ID
LEFT OUTER JOIN CODES_TEXT CT ON CT.CODE_ID=PS.POL_DIRASSU_CODE
LEFT OUTER JOIN CODES ON CODES.SHORT_CODE=P.MASTER_COMPANY AND CODES.TABLE_ID=2818
LEFT OUTER JOIN CODES_TEXT MAST_COMP ON CODES.CODE_ID=MAST_COMP.CODE_ID 
WHERE RES_TYPE.SHORT_CODE='MED' AND
CLAIM_SUPP.CLM_BUSUNIT_TEXT IN ('Retail Energy','E&S Property','Healthcare','Contract Binding Operations',
'Surety','Executive Assurance','P&C Programs','Construction','Alternative Markets','Lenders',
'Const, NAC, Alt Markets, High','Treaty Reinsurance','Programs','E&S Casualty','Travel & Accident',
'Professional Liability - Darien Managed','Professional Liability','High Excess Comp','Property',
'Const, NAC, Alt Markets, High Excess Comp (CNAX)','Canadian Managed','Special Risks',
'Facultative Reinsurance - not part of ACGL Insurance Operati','Professional Liability - Open Brokerage',
'National Accounts Casualty')
--AND P.EFFECTIVE_DATE >= '20200101' AND P.EXPIRATION_DATE <= '20201231'
GROUP BY
CLAIM_SUPP.CLM_BUSUNIT_TEXT,CLAIM_SUPP.CLM_BSUBDIV_TEXT,POLICY_LOB_DESC.SHORT_CODE,POLICY_LOB_DESC.CODE_DESC,
CLAIM_STATUS_CODE.SHORT_CODE,CLAIM_TYPE_CODE.SHORT_CODE,ENTITY.LAST_NAME,LEFT(P.EFFECTIVE_DATE,4),CT.CODE_DESC, LEFT(EVENT.DATE_OF_EVENT,4)
,MAST_COMP.CODE_DESC
)
( 
SELECT G1.*,
CASE WHEN G2.CLAIM_TOTAL_INC IS NULL THEN 0 ELSE G2.CLAIM_TOTAL_INC END AS CLAIM_TOTAL_INC,
CASE WHEN G2.CLAIM_TOTAL_BAL IS NULL THEN 0 ELSE G2.CLAIM_TOTAL_BAL END AS CLAIM_TOTAL_BAL,
CASE WHEN G2.CLAIM_TOTAL_RES_AMT IS NULL THEN 0 ELSE G2.CLAIM_TOTAL_RES_AMT END AS CLAIM_TOTAL_RES_AMT,
CASE WHEN G2.CLAIM_TOTAL_PAID IS NULL THEN 0 ELSE G2.CLAIM_TOTAL_PAID END AS CLAIM_TOTAL_PAID,
CASE WHEN G2.CLAIM_TOTAL_COLL IS NULL THEN 0 ELSE G2.CLAIM_TOTAL_COLL END AS CLAIM_TOTAL_COLL,
--G1.*,G2.ClaimCount,G2.ClaimantCount,G2.TransactionCount,G2.TransactionSplitCount,
CASE WHEN G3.IND_BAL IS NULL THEN 0 ELSE G3.IND_BAL END AS IND_BAL,
CASE WHEN G3.IND_PAID IS NULL THEN 0 ELSE G3.IND_PAID END AS IND_PAID,
CASE WHEN G3.IND_COLL IS NULL THEN 0 ELSE G3.IND_COLL END AS IND_COLL,
CASE WHEN G3.IND_INC IS NULL THEN 0 ELSE G3.IND_INC END AS IND_INC,
CASE WHEN G3.IND_RES_AMT IS NULL THEN 0 ELSE G3.IND_RES_AMT END AS IND_RES_AMT,
CASE WHEN G4.EXP1_BAL IS NULL THEN 0 ELSE G4.EXP1_BAL END AS EXP1_BAL,
CASE WHEN G4.EXP1_PAID IS NULL THEN 0 ELSE G4.EXP1_PAID END AS EXP1_PAID,
CASE WHEN G4.EXP1_COLL IS NULL THEN 0 ELSE G4.EXP1_COLL END AS EXP1_COLL,
CASE WHEN G4.EXP1_INC IS NULL THEN 0 ELSE G4.EXP1_INC END AS EXP1_INC,
CASE WHEN G4.EXP1_RES_AMT IS NULL THEN 0 ELSE G4.EXP1_RES_AMT END AS EXP1_RES_AMT,
CASE WHEN G5.EXP2_BAL IS NULL THEN 0 ELSE G5.EXP2_BAL END AS EXP2_BAL,
CASE WHEN G5.EXP2_PAID IS NULL THEN 0 ELSE G5.EXP2_PAID END AS EXP2_PAID,
CASE WHEN G5.EXP2_COLL IS NULL THEN 0 ELSE G5.EXP2_COLL END AS EXP2_COLL,
CASE WHEN G5.EXP2_INC IS NULL THEN 0 ELSE G5.EXP2_INC END AS EXP2_INC,
CASE WHEN G5.EXP2_RES_AMT IS NULL THEN 0 ELSE G5.EXP2_RES_AMT END AS EXP2_RES_AMT,
CASE WHEN G6.MED_BAL IS NULL THEN 0 ELSE G6.MED_BAL END AS MED_BAL,
CASE WHEN G6.MED_COLL IS NULL THEN 0 ELSE G6.MED_COLL END AS MED_COLL,
CASE WHEN G6.MED_INC IS NULL THEN 0 ELSE G6.MED_INC END AS MED_INC,
CASE WHEN G6.MED_PAID IS NULL THEN 0 ELSE G6.MED_PAID END AS MED_PAID,
CASE WHEN G6.MED_RES_AMT IS NULL THEN 0 ELSE G6.MED_RES_AMT END AS MED_RES_AMT
FROM GROUP2 G1 LEFT JOIN GROUP1 G2 ON G1.CLM_BSUBDIV_TEXT=G2.CLM_BSUBDIV_TEXT AND 
G1.CLM_BUSUNIT_TEXT=G2.CLM_BUSUNIT_TEXT AND G1.POLICY_LOB_CD=G2.POLICY_LOB_CD AND
G1.POLICY_LOB_DESC=G2.POLICY_LOB_DESC AND G1.CLAIM_STATUS_CODE=G2.CLAIM_STATUS_CODE AND 
G1.CLAIM_TYPE_CODE=G2.CLAIM_TYPE_CODE AND G1.ENTITY_LAST_NAME=G2.ENTITY_LAST_NAME AND G1.POLICY_YEAR=G2.POLICY_YEAR 
AND G1.DIRECT_ASSUMED=G2.DIRECT_ASSUMED AND G1.ACCIDENT_YEAR=G2.ACCIDENT_YEAR AND G1.ISSUE_COMP_NM=G2.ISSUE_COMP_NM 
LEFT JOIN GROUP3 G3 ON G1.CLM_BSUBDIV_TEXT=G3.CLM_BSUBDIV_TEXT AND 
G1.CLM_BUSUNIT_TEXT=G3.CLM_BUSUNIT_TEXT AND G1.POLICY_LOB_CD=G3.POLICY_LOB_CD AND
G1.POLICY_LOB_DESC=G3.POLICY_LOB_DESC AND G1.CLAIM_STATUS_CODE=G3.CLAIM_STATUS_CODE AND 
G1.CLAIM_TYPE_CODE=G3.CLAIM_TYPE_CODE AND G1.ENTITY_LAST_NAME=G3.ENTITY_LAST_NAME AND G1.POLICY_YEAR=G3.POLICY_YEAR
AND G1.DIRECT_ASSUMED=G3.DIRECT_ASSUMED AND G1.ACCIDENT_YEAR=G3.ACCIDENT_YEAR AND G1.ISSUE_COMP_NM=G3.ISSUE_COMP_NM
LEFT JOIN GROUP4 G4 ON G1.CLM_BSUBDIV_TEXT=G4.CLM_BSUBDIV_TEXT AND 
G1.CLM_BUSUNIT_TEXT=G4.CLM_BUSUNIT_TEXT AND G1.POLICY_LOB_CD=G4.POLICY_LOB_CD AND
G1.POLICY_LOB_DESC=G4.POLICY_LOB_DESC AND G1.CLAIM_STATUS_CODE=G4.CLAIM_STATUS_CODE AND 
G1.CLAIM_TYPE_CODE=G4.CLAIM_TYPE_CODE AND G1.ENTITY_LAST_NAME=G4.ENTITY_LAST_NAME AND G1.POLICY_YEAR=G4.POLICY_YEAR
AND G1.DIRECT_ASSUMED=G4.DIRECT_ASSUMED AND G1.ACCIDENT_YEAR=G4.ACCIDENT_YEAR AND G1.ISSUE_COMP_NM=G4.ISSUE_COMP_NM
LEFT JOIN GROUP5 G5 ON G1.CLM_BSUBDIV_TEXT=G5.CLM_BSUBDIV_TEXT AND 
G1.CLM_BUSUNIT_TEXT=G5.CLM_BUSUNIT_TEXT AND G1.POLICY_LOB_CD=G5.POLICY_LOB_CD AND
G1.POLICY_LOB_DESC=G5.POLICY_LOB_DESC AND G1.CLAIM_STATUS_CODE=G5.CLAIM_STATUS_CODE AND 
G1.CLAIM_TYPE_CODE=G5.CLAIM_TYPE_CODE AND G1.ENTITY_LAST_NAME=G5.ENTITY_LAST_NAME AND G1.POLICY_YEAR=G5.POLICY_YEAR
AND G1.DIRECT_ASSUMED=G5.DIRECT_ASSUMED AND G1.ACCIDENT_YEAR=G5.ACCIDENT_YEAR AND G1.ISSUE_COMP_NM=G5.ISSUE_COMP_NM
LEFT JOIN GROUP6 G6 ON G1.CLM_BSUBDIV_TEXT=G6.CLM_BSUBDIV_TEXT AND 
G1.CLM_BUSUNIT_TEXT=G6.CLM_BUSUNIT_TEXT AND G1.POLICY_LOB_CD=G6.POLICY_LOB_CD AND
G1.POLICY_LOB_DESC=G6.POLICY_LOB_DESC AND G1.CLAIM_STATUS_CODE=G6.CLAIM_STATUS_CODE AND 
G1.CLAIM_TYPE_CODE=G6.CLAIM_TYPE_CODE AND G1.ENTITY_LAST_NAME=G6.ENTITY_LAST_NAME AND G1.POLICY_YEAR=G6.POLICY_YEAR
AND G1.DIRECT_ASSUMED=G6.DIRECT_ASSUMED AND G1.ACCIDENT_YEAR=G6.ACCIDENT_YEAR AND G1.ISSUE_COMP_NM=G6.ISSUE_COMP_NM
) 

GO


