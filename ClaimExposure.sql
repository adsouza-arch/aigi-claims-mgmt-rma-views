USE [rmA_Main]
GO

/****** Object:  View [ARCH].[vw_DataStore_ClaimExposure]    Script Date: 11/8/2023 9:06:58 PM ******/
DROP VIEW [ARCH].[vw_DataStore_ClaimExposure]
GO

/****** Object:  View [ARCH].[vw_DataStore_ClaimExposure]    Script Date: 11/8/2023 9:06:58 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO









CREATE VIEW [ARCH].[vw_DataStore_ClaimExposure]
AS


-- Description: RMA CLAIM_EXPOSURE source abstraction query *Table added to move a claimants coverage/exposure in the case a claimant has 1:M exposures
--
-- Modification History:
-- Ver		When		Who				What
-- v1.15	2023-05-24	ADsouza		Added CLI-7279 Vehicle Fields as part of Exposure Query.
-- v1.14	2023-05-20	ADsouza		Moved non-CAS Liability fields out of Exposure (to Liability Loss View)
-- v1.13	2023-05-08	ADsouza		CLI-7115 Moved the Liability Loss fields out of this view into a separate dedicated view.
-- v1.12	2022-12-20	NGoel		Added where clause to exclude hold and rejected reserve per CLM-12417
-- v1.11	2022-11-23	NGoel		Added E&S liability fields and joins
-- v1.10	2022-11-14	NGoel		Updated CLM_EXPOSUR_NUM to include lossrowid, added RC DTTM_RDC_LAST_UPD to ORIG_ROW_UPDT_TS
-- V1.09	2022-10-25	NGoel		Updated exposure view  to remove changes done in v1.08,to pull only one liability loss per									claim, to pull coverages on a claim that re linked claimnats through loss types												(reserves established)
-- V1.08	2022-10-21	NGoel		Update view to separate liabilities and coverages/loss on a claim into differnt records so                                  that clm_Exposur_key does not change when liabilities are added,updtd defntn of clm_Exp										 key accordingly
-- v1.07	2022-10-04	NGoel		Updated definition of CLM_EXPOSUR_KEY and CLM_EXPOSUR_NUM so these do not result in null									in ED snowflake,updtd adjuster_nm to limit to 100 char
-- v1.06	2022-09-21	NGoel		Updated queries to make exposre key unique,rename EA liability column names														unique,to match exposure num with exposure key and same as in claim trans
-- v1.05	2022-07-25	NGoel		Updated exposure view to move Liability Loss supp for EA from claims view
-- v1.04	2022-02-14	AApkar		Update Claim Exposure base on Abstraction Layer 
-- v1.03	2022-05-20  PaDhole		Added Datadd of 10ms to deduplicate values of ROW_UPDT_TS based on natural keys
-- v1.02	2022-03-10	ISchiller	Updated claim exposure key
-- v1.01	2022-03-04	ISchiller	No change refresh only
-- v1.01	2022-02-14	ISchiller	Updated for v2.71 of abstract
-- v1.00	2022-02-14	ISchiller	Added Claimant exposure as a hierarchy level between Claimant and Claimant Transactions


WITH 
"VEHICLEInsured" As
(SELECT C.CLAIM_ID,T.CODE_DESC AS INS_CODE, INSD_VEH.VIN,INSD_VEH.VEHICLE_MAKE,INSD_VEH.VEHICLE_MODEL,
INSD_VEH.VEHICLE_YEAR,INSD_VEH.LICENSE_NUMBER,UXCS.LOSS_TYPE_I_CODE, 
UXCS.DRIVER_STATE, UXCS.LICENSE_NUM, UXCS.PRCNT_FAULT_NUM, UXC.ISINSURED,
ENT_UNIT_INSRD.LAST_NAME,ENT_UNIT_INSRD.FIRST_NAME
FROM CLAIM C JOIN 
(SELECT CLAIM_ID,US.VEHICLE_OWN_CODE,MAX(U.UNIT_ROW_ID) AS UNIT_ROW_ID FROM UNIT_X_CLAIM U 
JOIN UNIT_X_CLAIM_SUPP US ON U.UNIT_ROW_ID=US.UNIT_ROW_ID GROUP BY U.CLAIM_ID,US.VEHICLE_OWN_CODE)
TEMP ON TEMP.CLAIM_ID = C.CLAIM_ID
JOIN UNIT_X_CLAIM UXC ON UXC.UNIT_ROW_ID=TEMP.UNIT_ROW_ID AND TEMP.VEHICLE_OWN_CODE=160989
JOIN UNIT_X_CLAIM_SUPP UXCS ON UXC.UNIT_ROW_ID=UXCS.UNIT_ROW_ID
JOIN VEHICLE INSD_VEH ON INSD_VEH.UNIT_ID=UXC.UNIT_ID
JOIN CODES_TEXT T ON T.CODE_ID=TEMP.VEHICLE_OWN_CODE
LEFT JOIN "rmA_main"."dbo"."POLICY_X_INSURED" "POLICY_X_INSURED" (NOLOCK) ON  "C"."PRIMARY_POLICY_ID" = "POLICY_X_INSURED"."POLICY_ID"
LEFT OUTER JOIN ENTITY  ENT_UNIT_INSRD ON (ENT_UNIT_INSRD.ENTITY_ID="POLICY_X_INSURED"."INSURED_EID"))
,
"VEHICLEClaimant" AS
(SELECT C.CLAIM_ID,T.CODE_DESC AS INS_CODE, INSD_VEH.VIN,INSD_VEH.VEHICLE_MAKE,INSD_VEH.VEHICLE_MODEL,
INSD_VEH.VEHICLE_YEAR,INSD_VEH.LICENSE_NUMBER,UXCS.LOSS_TYPE_I_CODE, UXCS.PURPOSE_OF_USE, 
UXCS.DRIVER_STATE, UXCS.LICENSE_NUM, 
ISNULL(ENT_UNIT_COMP.LAST_NAME,'') + ISNULL( ', '  + ENT_UNIT_COMP.FIRST_NAME,'') AS "COMPANY",
"EN_CLMNT"."LAST_NAME", "EN_CLMNT"."FIRST_NAME"
FROM CLAIM C JOIN 
(SELECT CLAIM_ID,US.VEHICLE_OWN_CODE,MAX(U.UNIT_ROW_ID) AS UNIT_ROW_ID FROM UNIT_X_CLAIM U 
JOIN UNIT_X_CLAIM_SUPP US ON U.UNIT_ROW_ID=US.UNIT_ROW_ID GROUP BY U.CLAIM_ID,US.VEHICLE_OWN_CODE)
TEMP ON TEMP.CLAIM_ID = C.CLAIM_ID
JOIN UNIT_X_CLAIM UXC ON UXC.UNIT_ROW_ID=TEMP.UNIT_ROW_ID AND TEMP.VEHICLE_OWN_CODE=160990
JOIN UNIT_X_CLAIM_SUPP UXCS ON UXC.UNIT_ROW_ID=UXCS.UNIT_ROW_ID
JOIN VEHICLE INSD_VEH ON INSD_VEH.UNIT_ID=UXC.UNIT_ID
JOIN CODES_TEXT T ON T.CODE_ID=TEMP.VEHICLE_OWN_CODE
JOIN "rmA_Main"."dbo"."CLAIMANT" "CLAIMANT" (NOLOCK) ON "CLAIMANT"."CLAIM_ID" = "C"."CLAIM_ID"
LEFT OUTER JOIN ENTITY  ENT_UNIT_COMP ON (ENT_UNIT_COMP.ENTITY_ID=UXC.COMPANY)
LEFT JOIN "rmA_Main"."dbo"."ENTITY" "EN_CLMNT" (NOLOCK) ON "CLAIMANT"."CLAIMANT_EID" = "EN_CLMNT"."ENTITY_ID")
,
X AS (
	SELECT --DISTINCT
	"CLAIM"."CLAIM_ID" AS "CLAIM_ID", -- should this be deleted? but needed for the query to work.
				'Claim_Exposure' AS "ROW_TYP_NM"
				,'RMA' AS "SRC_SYS_CD"
				,'ALL' AS "BUS_UNIT_CD"
				,
					CONCAT('RMA-ALL-EXP-',
					(CASE WHEN "CLAIM"."CLAIM_ID" IS NULL or "CLAIM"."CLAIM_ID"=0 OR "CLAIM"."CLAIM_ID"='' THEN 'No Claim' ELSE
						 "CLAIM"."CLAIM_ID" END)
					, '-',
					(CASE WHEN "CLAIMANT"."CLAIMANT_NUMBER" IS NULL or "CLAIMANT"."CLAIMANT_NUMBER"=''  THEN '0' ELSE "CLAIMANT"."CLAIMANT_NUMBER" END)
					, '-',
					(CASE WHEN "POLICY_X_UNIT"."STAT_UNIT_NUMBER" IS NOT NULL AND "POLICY_X_UNIT"."STAT_UNIT_NUMBER"<>''  THEN --'0'
					"POLICY_X_UNIT"."STAT_UNIT_NUMBER" 
					ELSE 
					CASE WHEN "POLICY_X_UNIT"."SITE_SEQ_NUMBER" IS NOT NULL AND "POLICY_X_UNIT"."SITE_SEQ_NUMBER"<>'' THEN
					"POLICY_X_UNIT"."SITE_SEQ_NUMBER" ELSE '0' END
					END)
					, '-',
					(CASE WHEN "POLICY_X_CVG_TYPE"."POLCVG_ROW_ID" IS NULL OR "POLICY_X_CVG_TYPE"."POLCVG_ROW_ID"='' 
						THEN '0' ELSE "POLICY_X_CVG_TYPE"."POLCVG_ROW_ID" END)
					,'-',
					(CASE WHEN "COVERAGE_X_LOSS"."CVG_LOSS_ROW_ID" IS NULL OR "COVERAGE_X_LOSS"."CVG_LOSS_ROW_ID"='' 
						THEN '0' ELSE "COVERAGE_X_LOSS"."CVG_LOSS_ROW_ID" END)
					--,'-',
					--(CASE WHEN "LIABILITY_ROW_ID" IS NULL OR "LIABILITY_ROW_ID"=0 OR "LIABILITY_ROW_ID"='' 
					--	THEN '0' ELSE "LIABILITY_ROW_ID" END)
					)
					AS "CLM_EXPOSUR_KEY"
  				,CASE 
					WHEN ISNULL(cast("CLAIMANT"."CLAIMANT_EID" AS VARCHAR), '') = '' THEN 'No Claimant' ELSE 
					concat ('RMA-ALL-', concat (CAST("CLAIM"."CLAIM_ID" AS VARCHAR), '-', CAST("CLAIMANT"."CLAIMANT_EID" AS VARCHAR))) END AS "CLMNT_KEY"
				,concat ('RMA-ALL-', CAST("CLAIM"."CLAIM_ID" AS VARCHAR)) AS "CLM_KEY"
				, NULL AS "PRL_KEY"
				, NULL AS "COV_KEY"
				, NULL AS "RSK_KEY"
				, NULL AS "LYR_KEY"
				, NULL AS "POL_KEY"
				,
					(
						SELECT
							CAST
							(
								CASE
									WHEN "X"."MAXV" is NULL then NULL
									ELSE
									concat(substring("X"."MAXV", 1, 4), '-', substring("X"."MAXV", 5, 2), '-', substring("X"."MAXV", 7, 2),
									' ', substring("X"."MAXV", 9, 2), ':', substring("X"."MAXV", 11, 2), ':', substring("X"."MAXV", 13, 2))
								END
								AS datetime
							) "X"
					FROM
					(
						SELECT
							MAX("VS"."V") AS "MAXV"
						FROM
						(
							VALUES
								(isNULL("CLAIM"."DTTM_RCD_LAST_UPD", '19000101000000')),
								(isNULL("CLAIMANT"."DTTM_RCD_LAST_UPD", '19000101000000')),
								(isNULL("EN_CLMNT"."DTTM_RCD_LAST_UPD", '19000101000000')),
								(isNULL("EVENT"."DTTM_RCD_LAST_UPD", '19000101000000')),
								(isNULL("POLICY"."DTTM_RCD_LAST_UPD", '19000101000000')),
								(isNULL("POLICY_X_CVG_TYPE"."DTTM_RCD_LAST_UPD", '19000101000000')),
								(isNULL("CLAIMRC"."RC_DTTM_RCD_LAST_UPD",'19000101000000'))
						) AS "VS"("V")
						) "X"
					) AS "ORIG_ROW_UPDT_TS"
				,
					CONCAT('RMA-CLMT-EXP-',
					CASE WHEN "CLAIMANT"."CLAIMANT_NUMBER" IS NULL OR "CLAIMANT"."CLAIMANT_NUMBER"='' THEN '0' ELSE "CLAIMANT"."CLAIMANT_NUMBER" END
					, '-',
					CASE WHEN "POLICY_X_CVG_TYPE"."POLCVG_ROW_ID" IS NULL OR "POLICY_X_CVG_TYPE"."POLCVG_ROW_ID"='' THEN '0' ELSE "POLICY_X_CVG_TYPE"."POLCVG_ROW_ID" END 
					,'-',
					(CASE WHEN "COVERAGE_X_LOSS"."CVG_LOSS_ROW_ID" IS NULL OR "COVERAGE_X_LOSS"."CVG_LOSS_ROW_ID"='' 
						THEN '0' ELSE "COVERAGE_X_LOSS"."CVG_LOSS_ROW_ID" END)
					) AS "CLM_EXPOSUR_NUM"
				, CASE WHEN "CLAIMANT"."CLAIMANT_NUMBER" IS NULL OR "CLAIMANT"."CLAIMANT_NUMBER"='' THEN '0' ELSE "CLAIMANT"."CLAIMANT_NUMBER" END  AS "CLMNT_NUM"
				, "CLAIM"."CLAIM_NUMBER" AS "CLM_NUM"
				, NULL AS "PRL_CD"
				, "CT_COV"."SHORT_CODE" AS "COV_TYP_CD"
				,
					CASE 
						WHEN "POLICY_X_UNIT"."STAT_UNIT_NUMBER" IS NULL THEN "POLICY_X_UNIT"."SITE_SEQ_NUMBER" 
						ELSE "POLICY_X_UNIT"."STAT_UNIT_NUMBER"
					END AS "RSK_NUM"
				, NULL AS "LYR_NUM"
				, "POLICY"."POLICY_NAME" AS "POL_NUM"
				,
				   CASE
						WHEN "POLICY"."EFFECTIVE_DATE" is NULL then NULL
						ELSE CAST(concat(substring("POLICY"."EFFECTIVE_DATE", 1, 4), '-',
						substring("POLICY"."EFFECTIVE_DATE", 5, 2), '-',
						substring("POLICY"."EFFECTIVE_DATE", 7, 2)) AS date)
					END AS "POL_EFF_DT"
  				,"POL_SOURCE_CODE".SHORT_CODE AS "POL_ORIG_SRC_CD"
				, NULL AS "PRL_DESC"
				, "CT_COV"."CODE_DESC" AS "COV_TYP_DESC"
				,
					CASE "CLAIM_SUPP"."CLM_CLMDOCC_FLAG"
  						WHEN -1 THEN 'CM' 
						WHEN 0 THEN 'OCC' 
						ELSE ''
					END AS "COV_BASIS_CD"
				,
					CASE "CLAIM_SUPP"."CLM_CLMDOCC_FLAG"
						WHEN -1 THEN 'Claims Made' 
						WHEN 0 THEN 'Occurrence' 
						ELSE ''
					END AS "COV_BASIS_DESC"
			, "ADJUSTER"."ENTITY_ID" AS "ADJSTR_CD"
			,
				CASE "CT_ADJUSTER_TYP"."SHORT_CODE"
					WHEN 'IND' THEN 'PSRN'
					WHEN 'BUS' THEN 'ORG'
				END AS "ADJSTR_ENTY_TYP_CD"

			, concat ("ADJUSTER"."LAST_NAME", ISNULL(concat(', ', "ADJUSTER"."FIRST_NAME"), '')) AS "ADJSTR_NM"
			, "ADJUSTER"."PHONE1" AS "ADJSTR_PHN_NUM"
			, "ADJUSTER"."EMAIL_ADDRESS" AS "ADJSTR_EMAIL_ADDR"
			--, "S"."STATE_ID" "PREM_EXPOSUR_STATE_CD"
			--, "S"."STATE_NAME" "PREM_EXPOSUR_STATE_PROV_NM"
			, CASE
				WHEN "S"."STATE_ID" IS NOT NULL AND "S"."STATE_ID"<>'' THEN "S"."STATE_ID"
				WHEN "S1"."STATE_ID" IS NOT NULL AND "S1"."STATE_ID"<>'' THEN "S1"."STATE_ID"
				ELSE ''
				END AS "PREM_EXPOSUR_STATE_CD"
			, CASE
				WHEN "S"."STATE_ID" IS NOT NULL AND "S"."STATE_ID"<>'' THEN "S"."STATE_NAME"
				WHEN "S1"."STATE_ID" IS NOT NULL AND "S1"."STATE_ID"<>'' THEN "S1"."STATE_NAME"
				ELSE ''
				END AS "PREM_EXPOSUR_STATE_PROV_NM"
			,
				CASE
					WHEN ISNULL("S"."STATE_ID", '') != '' THEN "S"."COUNTRY_ID"
					WHEN ISNULL("S1"."STATE_ID", '') != '' THEN "S1"."COUNTRY_ID"
					ELSE ''
				END AS "PREM_EXPOSUR_CNTRY_CD"
				, left("CVG_TYPE_SUPP"."POL_ASLOB_TEXT", 3) AS "ASL_CD"
				, "POLICY_X_CVG_TYPE"."SUB_LINE" AS "SUBLINE_CD"
				, "POLICY_X_CVG_TYPE"."COVERAGE_CLASS_CODE" AS "CLS_CD"
  				,"CT_COV".CODE_DESC AS "CLS_DESC"
				, NULL AS "PREV_TPA_CLMNT_CD"
				, "CLAIMANT_SUPP"."CLM_TPA_NUM_TEXT" AS "TPA_CLMNT_CD"
				, NULL AS "TPA_CLMNT_ENTERED_TS"
				,
				CASE
					WHEN "POLICY_X_INSURED"."ADD_AS_CLAIMANT"  IS NULL OR "POLICY_X_INSURED"."ADD_AS_CLAIMANT"=0
					THEN 'N'ELSE 'Y'
				END  AS "SAME_AS_INSRD_IND"
				, NULL AS "BUREAU_LINE_CD"
				, NULL AS "BUREAU_LINE_DESC"
				, NULL AS "CAUSE_OF_LOSS_NOTES"		

		FROM "rmA_Main"."dbo"."CLAIM" "CLAIM" (NOLOCK) JOIN
				(
					SELECT "RESERVE_CURRENT"."CLAIM_ID","RESERVE_CURRENT"."CLAIMANT_EID","RESERVE_CURRENT"."POLCVG_LOSS_ROW_ID",MAX("RESERVE_CURRENT"."DTTM_RCD_LAST_UPD") AS "RC_DTTM_RCD_LAST_UPD"
					FROM  "rmA_main"."dbo"."RESERVE_CURRENT" "RESERVE_CURRENT" (NOLOCK) 
					WHERE 1=1 --AND CLAIM_ID=1351432 
					--AND "RESERVE_CURRENT"."RES_STATUS_CODE"  NOT IN
					--(SELECT "CD"."CODE_ID" FROM "rmA_main"."dbo".CODES CD JOIN "rmA_main"."dbo".GLOSSARY G ON 
					--"G"."TABLE_ID"="CD"."TABLE_ID" WHERE "CD"."DELETED_FLAG"=0 AND "G"."SYSTEM_TABLE_NAME"='RESERVE_STATUS'
					--AND "CD"."SHORT_CODE" IN ('H','R')) 
				AND ("RESERVE_CURRENT"."RC_ROW_ID" IN (SELECT DISTINCT("RC_ROW_ID") FROM "rmA_main"."dbo"."RESERVE_HISTORY")
			OR ("RESERVE_CURRENT"."RC_ROW_ID" IN (SELECT DISTINCT("RC_ROW_ID") FROM "rmA_main"."dbo"."FUNDS_TRANS_SPLIT")))
					GROUP BY
						"RESERVE_CURRENT"."CLAIM_ID","RESERVE_CURRENT"."CLAIMANT_EID","RESERVE_CURRENT"."POLCVG_LOSS_ROW_ID"
				) "CLAIMRC"  ON "CLAIMRC"."CLAIM_ID"= "CLAIM"."CLAIM_ID"

					JOIN "rmA_main"."dbo"."EVENT" "EVENT" (NOLOCK) ON "CLAIM"."EVENT_ID" =
					"EVENT"."EVENT_ID"
					JOIN "rmA_main"."dbo"."CLAIMANT" "CLAIMANT" (NOLOCK) ON "CLAIMRC"."CLAIM_ID" =
					"CLAIMANT"."CLAIM_ID" AND "CLAIMANT"."CLAIMANT_EID" = "CLAIMRC"."CLAIMANT_EID" 
					JOIN "rmA_Main"."dbo"."COVERAGE_X_LOSS" "COVERAGE_X_LOSS" (NOLOCK) ON
					"COVERAGE_X_LOSS"."CVG_LOSS_ROW_ID" = "CLAIMRC"."POLCVG_LOSS_ROW_ID" 
					JOIN "rmA_main"."dbo"."POLICY_X_CVG_TYPE" "POLICY_X_CVG_TYPE" (NOLOCK) ON
					"POLICY_X_CVG_TYPE"."POLCVG_ROW_ID" = "COVERAGE_X_LOSS"."POLCVG_ROW_ID"
					--AND "POLICY_X_CVG_TYPE".POLICY_ID="CLAIM"."PRIMARY_POLICY_ID"
					JOIN "rmA_Main"."dbo"."POLICY_X_UNIT" "POLICY_X_UNIT" (NOLOCK) ON
					--"CLAIM"."PRIMARY_POLICY_ID"="POLICY_X_UNIT"."POLICY_ID" AND 
					"POLICY_X_UNIT"."POLICY_UNIT_ROW_ID" = "POLICY_X_CVG_TYPE"."POLICY_UNIT_ROW_ID"
					JOIN "rmA_main"."dbo"."POLICY" "POLICY" (NOLOCK) ON "POLICY"."POLICY_ID" =
					"POLICY_X_UNIT"."POLICY_ID"
					LEFT JOIN "rmA_main"."dbo"."CLAIM_ADJUSTER" "CLAIM_ADJUSTER" (NOLOCK)  ON
					"CLAIM_ADJUSTER"."CLAIM_ID"="CLAIM"."CLAIM_ID" AND "CLAIM_ADJUSTER"."CURRENT_ADJ_FLAG" = -1
					LEFT JOIN "rmA_main"."dbo"."ENTITY" "ADJUSTER" (NOLOCK) ON "ADJUSTER"."ENTITY_ID" =
					"CLAIM_ADJUSTER"."ADJUSTER_EID"
					LEFT JOIN "rmA_main"."dbo"."CODES_TEXT" "CT_ADJUSTER_TYP" (NOLOCK) ON
					"CT_ADJUSTER_TYP"."CODE_ID" = "ADJUSTER"."NAME_TYPE"
					LEFT JOIN "rmA_Main"."dbo"."CLAIM_SUPP" "CLAIM_SUPP" (NOLOCK) ON "CLAIM"."CLAIM_ID" =
					"CLAIM_SUPP"."CLAIM_ID"
					LEFT JOIN "rmA_main"."dbo"."POLICY_SUPP" "POLICY_SUPP" (NOLOCK) ON "POLICY"."POLICY_ID"
					 = "POLICY_SUPP"."POLICY_ID" 
					LEFT JOIN "rmA_Main"."dbo"."POLICY_X_INSURED" "POLICY_X_INSURED" (NOLOCK) ON
					"POLICY_X_INSURED"."POLICY_ID"="POLICY"."POLICY_ID" AND ADD_AS_CLAIMANT=-1
					LEFT JOIN "rmA_main"."dbo"."CLAIMANT_SUPP" "CLAIMANT_SUPP" (NOLOCK) ON
					"CLAIMANT"."CLAIMANT_ROW_ID" = "CLAIMANT_SUPP"."CLAIMANT_ROW_ID"
  					JOIN "rmA_main"."dbo"."ENTITY" "EN_CLMNT" (NOLOCK) ON "CLAIMANT"."CLAIMANT_EID" =
					"EN_CLMNT"."ENTITY_ID" 
					LEFT JOIN "rmA_main"."dbo"."CODES_TEXT" "CLMNT_CRTY" (NOLOCK) ON "CLMNT_CRTY"."CODE_ID"
					 = "EN_CLMNT"."COUNTRY_CODE"
					LEFT JOIN "rmA_main"."dbo"."STATES" "ST_EN_CLMNT" (NOLOCK) ON "EN_CLMNT"."STATE_ID" =
					"ST_EN_CLMNT"."STATE_ROW_ID"
					LEFT JOIN "rmA_main"."dbo"."CODES_TEXT" "CT_CLMNT_STA" (NOLOCK) ON 
					"CT_CLMNT_STA"."CODE_ID" = "CLAIMANT"."CLAIMANT_STATUS_CODE"
					LEFT JOIN "rmA_main"."dbo"."CODES_TEXT" "CT_CLMNT_TYP" (NOLOCK) ON
					"CT_CLMNT_TYP"."CODE_ID" = "CLAIMANT"."CLAIMANT_TYPE_CODE"
					LEFT JOIN "rmA_main"."dbo"."CODES_TEXT" "CT_METHD_CLS" (NOLOCK) ON
					"CT_METHD_CLS"."CODE_ID" = "CLAIM"."METHOD_CLOSED_CODE"
					LEFT JOIN "rmA_main"."dbo"."CODES_TEXT" "CT_CTD" (NOLOCK) ON "CT_CTD"."CODE_ID" =
					"CLAIM"."CLAIM_TYPE_CODE" 
					LEFT JOIN "rmA_main"."dbo"."CODES_TEXT" "POL_SOURCE_CODE" (NOLOCK) ON
					"POL_SOURCE_CODE"."CODE_ID" = "POLICY_SUPP"."POL_SOURCE_CODE"
					 LEFT JOIN "rmA_main"."dbo"."CODES_TEXT" "CT_COV" (NOLOCK) ON "CT_COV"."CODE_ID" =
					 "POLICY_X_CVG_TYPE"."COVERAGE_TYPE_CODE" 
					LEFT JOIN "rmA_main"."dbo"."CVG_TYPE_SUPP" "CVG_TYPE_SUPP" ON
					"CVG_TYPE_SUPP"."POLCVG_ROW_ID" =
					"POLICY_X_CVG_TYPE"."POLCVG_ROW_ID"
					LEFT JOIN "rmA_main"."dbo"."STATES" "S" ON "S"."STATE_ROW_ID" =
					"CVG_TYPE_SUPP"."POL_PREMSTE_STATE"
					LEFT JOIN "rmA_main"."dbo"."STATES" "S1" ON "S1"."STATE_ROW_ID" =
					"CLAIM"."FILING_STATE_ID"
	WHERE 1=1 
	)

SELECT 
	"X"."ROW_TYP_NM",
	"X"."SRC_SYS_CD",
	"X"."BUS_UNIT_CD",
	"X"."CLM_EXPOSUR_KEY",
	"X"."CLMNT_KEY",
	"X"."CLM_KEY",
	"X"."PRL_KEY",
	"X"."COV_KEY",
	"X"."RSK_KEY",
	"X"."LYR_KEY",
	"X"."POL_KEY",
		--DATEADD(ms, 
		--		10 * (row_number() 
		--			  over (
		--					partition by 
		--						"X"."CLM_EXPOSUR_KEY",
		--						"X"."CLMNT_NUM",
		--						"X"."CLM_NUM",
		--						"X".ORIG_ROW_UPDT_TS
		--					order by "X"."CLM_EXPOSUR_KEY"
		--					)-1
		--			  ), 
	"X".ORIG_ROW_UPDT_TS /*)*/ AS "ROW_UPDT_TS", 
	"X"."CLM_EXPOSUR_NUM",
	"X"."CLMNT_NUM",
	"X"."CLM_NUM",
	"X"."PRL_CD",
	"X"."COV_TYP_CD",
	"X"."RSK_NUM",
	"X"."LYR_NUM",
	"X"."POL_NUM",
	"X"."POL_EFF_DT",
	"X"."POL_ORIG_SRC_CD",
	"X"."PRL_DESC",
	"X"."COV_TYP_DESC",
	"X"."COV_BASIS_CD",
	"X"."COV_BASIS_DESC",
	"X"."ADJSTR_CD",
	"X"."ADJSTR_ENTY_TYP_CD",
	CASE WHEN "X"."ADJSTR_NM" LIKE ', ' THEN 'No Adjuster' ELSE LEFT("X"."ADJSTR_NM",100) END AS "ADJSTR_NM",
	"X"."ADJSTR_PHN_NUM",
	"X"."ADJSTR_EMAIL_ADDR",
	"X"."PREM_EXPOSUR_STATE_CD",
	"X"."PREM_EXPOSUR_STATE_PROV_NM",
	"X"."PREM_EXPOSUR_CNTRY_CD",
	"X"."ASL_CD",
	"X"."SUBLINE_CD",
	"X"."CLS_CD",
	"X"."CLS_DESC",
	"X"."BUREAU_LINE_CD",
	"X"."BUREAU_LINE_DESC",
	"X"."CAUSE_OF_LOSS_NOTES",
	CASE "VEHICLEInsured"."ISINSURED" WHEN -1 THEN 'Y' ELSE 'N' END AS "INSRD_VEH_IND",
	"VEHICLEInsured"."VIN" AS "INSRD_VEH_VIN",
	"VEHICLEInsured"."VEHICLE_YEAR" AS "INSRD_VEH_YR",
	"VEHICLEInsured"."VEHICLE_MAKE" AS "INSRD_VEH_MAKE_NM",
	"VEHICLEInsured"."VEHICLE_MODEL" AS "INSRD_VEH_MDL_NM",
	"VEHICLEInsured"."LICENSE_NUM" AS "INSRD_LIC_NUM",
	"VEHICLEInsured"."DRIVER_STATE" AS "INSRD_LIC_NUM_ST_CD",
	"VEHICLEInsured"."PRCNT_FAULT_NUM" AS "INSRD_FAULT_DEGREE_PCT",
	"VEHICLEInsured"."LAST_NAME" AS "INSRD_LAST_NM",
	"VEHICLEInsured"."FIRST_NAME" AS "INSRD_FIRST_NM",
	"VEHICLEClaimant"."VIN" AS "CLMNT_VEH_VIN",
	"VEHICLEClaimant"."VEHICLE_YEAR" AS "CLMNT_VEH_YR",
	"VEHICLEClaimant"."VEHICLE_MAKE" AS "CLMNT_VEH_MAKE_NM",
	"VEHICLEClaimant"."VEHICLE_MODEL" AS "CLMNT_VEH_MDL_NUM",
	"VEHICLEClaimant"."LICENSE_NUM" AS "CLMNT_LIC_NUM",
	"VEHICLEClaimant"."DRIVER_STATE" AS "CLMNT_LIC_NUM_ST_CD",
	"VEHICLEClaimant"."COMPANY" AS "CLMNT_INSRNG_CMPNY_ID",
	"VEHICLEClaimant"."PURPOSE_OF_USE" AS "CLMNT_VEH_UTIL_TYP",
	"VEHICLEClaimant"."LOSS_TYPE_I_CODE" AS "ISO_LOSS_TYP_CD",
	"VEHICLEClaimant"."LAST_NAME" AS "CLMNT_LAST_NM",
	"VEHICLEClaimant"."FIRST_NAME" AS "CLMNT_FIRST_NM"

FROM X
LEFT JOIN "VEHICLEInsured" ON "X"."CLAIM_ID" ="VEHICLEInsured"."CLAIM_ID"
LEFT JOIN "VEHICLEClaimant" ON "X"."CLAIM_ID"="VEHICLEClaimant"."CLAIM_ID"

GO


